import java.util.stream.Collectors

plugins {
    id 'ferritecore.loader-conventions'
    id 'net.neoforged.gradle.userdev'
    id 'net.neoforged.gradle.mixin' version "${neogradle_version}"
}

runs {
    configureEach {
        workingDirectory project.file('run')
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
        modSource project(":Common").sourceSets.googleimpl
    }
    client
    server
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    // TODO this is a hack and breaks the intentional isolation of these source sets. However, since they are going away
    // in 20.5 anyway it does not need to last for long.
    compileOnly files(project(":Common").sourceSets.googleaccess.java.destinationDirectory)
}

compileJava {
    source(project(":Common").sourceSets.googleimpl.allSource)
}

jar {
    filesMatching("*.mixin.json") {
        expand "refmap_target": "${mod_id}."
    }
}

// For some reason this doesn't work when in the "convention" scripts...
def customGradle = project.file('custom.gradle');
if (customGradle.exists()) {
    apply from: customGradle;
}
